{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/upload-file.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction HomeComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Uploaded \", ctx_r1.currentFolder, \". \");\n  }\n}\nconst _c0 = function () {\n  return [\"/user\"];\n};\nexport class HomeComponent {\n  constructor(uploadFileService) {\n    this.uploadFileService = uploadFileService;\n    this.acceptedFormat = '.pdf';\n    this.maxSize = 102400;\n    this.onSendFilesList = new EventEmitter();\n    // filesList = [];\n    this.uploadedFiles = [];\n    this.currentFolder = \"\";\n  }\n  ngOnInit() {}\n  ngOnDestroy() {}\n  UploadFiles(files) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const folderHolder = {};\n      _this.uploadedFiles = [];\n      let file;\n      for (file of Array.from(files)) {\n        // console.log(file['webkitRelativePath'], file['size'], file['type']);\n        const path = file['webkitRelativePath'];\n        const pathPieces = path.split('/');\n        if (!pathPieces.reverse()[0].startsWith('.')) {\n          _this.currentFolder = pathPieces[1];\n          // console.log('Checking for folder ', currentFolder, 'in', folderHolder);\n          if (folderHolder[_this.currentFolder]) {\n            const b = yield lastValueFrom(_this.uploadFileService.uploadFile(folderHolder[_this.currentFolder], file));\n            _this.uploadedFiles.push({\n              fileName: pathPieces[0],\n              folder: _this.currentFolder,\n              folderId: folderHolder[_this.currentFolder]\n            });\n          } else {\n            const folderId = yield lastValueFrom(_this.uploadFileService.createFolder(_this.currentFolder));\n            folderHolder[_this.currentFolder] = folderId;\n            const p = yield lastValueFrom(_this.uploadFileService.uploadFile(folderHolder[_this.currentFolder], file));\n            _this.uploadedFiles.push({\n              fileName: pathPieces[0],\n              folder: _this.currentFolder,\n              folderId: folderHolder[_this.currentFolder]\n            });\n          }\n        }\n      }\n      console.log(_this.uploadedFiles);\n    })();\n  }\n  SendFile() {\n    this.sendFileService.setMessage(uploadedFiles);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.UploadFileService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  inputs: {\n    acceptedFormat: \"acceptedFormat\",\n    maxSize: \"maxSize\"\n  },\n  outputs: {\n    onSendFilesList: \"onSendFilesList\"\n  },\n  decls: 8,\n  vars: 4,\n  consts: [[\"id\", \"1-basic\", \"type\", \"file\", \"webkitdirectory\", \"\", \"multiple\", \"\", 3, \"change\"], [\"file_input\", \"\"], [2, \"width\", \"80%\", \"margin-top\", \"30px\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"nav-item\", \"nav-link\", 3, \"routerLink\", \"click\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"input\", 0, 1);\n      i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_0_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.UploadFiles(_r0.files));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, HomeComponent_ng_container_3_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_4_listener() {\n        return ctx.SendFile();\n      });\n      i0.ɵɵtext(5, \" Test\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.uploadedFiles == null ? null : ctx.uploadedFiles.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.message);\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport class FileItem {\n  constructor() {\n    this.name = \"\";\n    this.size = 0;\n    this.type = \"\";\n  }\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","lastValueFrom","i0","HomeComponent","constructor","uploadFileService","ngOnInit","ngOnDestroy","UploadFiles","files","folderHolder","uploadedFiles","file","Array","from","path","pathPieces","split","reverse","startsWith","currentFolder","b","uploadFile","push","fileName","folder","folderId","createFolder","p","console","log","SendFile","sendFileService","setMessage","selectors","inputs","acceptedFormat","maxSize","outputs","onSendFilesList","decls","vars","consts","template","ctx","FileItem"],"sourceRoot":"","sources":["/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/home/home.component.ts","/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/home/home.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { lastValueFrom, Subscription } from 'rxjs';\nimport { UploadFileService } from '../services/upload-file.service';\nimport { SendFileService } from '../services/send-file.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  @Input() acceptedFormat: string = '.pdf';\n  @Input() maxSize: number = 102400;\n  @Output() onSendFilesList: EventEmitter<FileItem[]> = new EventEmitter<\n    FileItem[]\n  >();\n  // filesList = [];\n  uploadedFiles: any = [];\n  currentFolder: any = \"\";\n\n  constructor(private uploadFileService: UploadFileService) { }\n  ngOnInit() {\n  }\n\n  ngOnDestroy(): void { }\n\n  async UploadFiles(files: any) {\n    const folderHolder: any = {};\n    this.uploadedFiles = [];\n\n    let file: any;\n    for (file of Array.from(files)) {\n      // console.log(file['webkitRelativePath'], file['size'], file['type']);\n      const path: string = file['webkitRelativePath'];\n      const pathPieces: any = path.split('/');\n\n      if (!pathPieces.reverse()[0].startsWith('.')) {\n        this.currentFolder = pathPieces[1];\n        // console.log('Checking for folder ', currentFolder, 'in', folderHolder);\n        if (folderHolder[this.currentFolder]) {\n          const b = await lastValueFrom(\n            this.uploadFileService.uploadFile(folderHolder[this.currentFolder], file)\n          );\n          this.uploadedFiles.push({\n            fileName: pathPieces[0],\n            folder: this.currentFolder,\n            folderId: folderHolder[this.currentFolder],\n          });\n        } else {\n          const folderId = await lastValueFrom(\n            this.uploadFileService.createFolder(this.currentFolder)\n          );\n          folderHolder[this.currentFolder] = folderId;\n\n          const p = await lastValueFrom(\n            this.uploadFileService.uploadFile(folderHolder[this.currentFolder], file)\n          );\n          this.uploadedFiles.push({\n            fileName: pathPieces[0],\n            folder: this.currentFolder,\n            folderId: folderHolder[this.currentFolder],\n          });\n        }\n      }\n    }\n    console.log(this.uploadedFiles);\n  }\n  SendFile(){\n    this.sendFileService.setMessage(uploadedFiles);\n  }\n}\n\nexport class FileItem {\n  name: string = \"\";\n  size: number = 0;\n  type: string = \"\";\n}\n","<input\n  id=\"1-basic\"\n  type=\"file\"\n  #file_input\n  (change)=\"UploadFiles(file_input.files)\"\n  webkitdirectory\n  multiple\n/>\n<div style=\"width: 80%; margin-top: 30px\">\n  <ng-container *ngIf=\"uploadedFiles?.length\">\n    Uploaded {{ currentFolder }}.\n  </ng-container>\n</div>\n\n<button\n  type=\"button\"\n  class=\"nav-item nav-link\"\n  [routerLink]=\"['/user']\"\n  (click)=\"SendFile()\"\n>\n  Test\n</button>\n\n<p>{{ message }}</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}