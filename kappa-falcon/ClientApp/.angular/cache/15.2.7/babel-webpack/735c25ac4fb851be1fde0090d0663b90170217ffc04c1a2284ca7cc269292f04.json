{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/upload-file.service\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"uploadFiles.folder;\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, HomeComponent_3_ng_template_0_Template, 2, 0, \"ng-template\");\n  }\n}\nfunction HomeComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" No files \");\n  }\n}\nexport class HomeComponent {\n  constructor(uploadFileService) {\n    this.uploadFileService = uploadFileService;\n    this.uploadedFiles = [];\n  }\n  ngOnInit() {}\n  uploadFiles(files) {\n    const arrFiles = Array.from(files);\n    const folderHolder = {};\n    arrFiles.forEach(file => {\n      const path = file['webkitRelativePath'];\n      const pathPieces = path.split('/');\n      pathPieces.pop();\n      console.log(path, pathPieces.join('/'));\n      if (!folderHolder[pathPieces.join('/')]) {\n        // create folder and add to folderHolder\n        this.uploadFileService.createFolder(pathPieces.join('/')).subscribe(folderId => folderHolder[pathPieces.join('/')] = folderId);\n      }\n    });\n    //\n    setTimeout(() => {\n      console.log(folderHolder);\n    }, 100);\n    console.log(arrFiles);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.UploadFileService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"1-basic\", \"type\", \"file\", \"webkitdirectory\", \"\", \"multiple\", \"\", 3, \"change\"], [\"fileInput\", \"\"], [2, \"width\", \"80%\", \"margin-top\", \"30px\"], [4, \"ngIf\", \"ngIfElse\"], [\"noFiles\", \"\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"input\", 0, 1);\n      i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_0_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.uploadFiles(_r0.files));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, HomeComponent_3_Template, 1, 0, null, 3);\n      i0.ɵɵtemplate(4, HomeComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.uploadedFiles == null ? null : ctx.uploadedFiles.length)(\"ngIfElse\", _r2);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAWIA,2BAAK;IAAAA,mCAAmB;IAAAA,iBAAM;;;;;IADhCA,6EAEc;;;;;IACSA,0BAAS;;;ACLlC,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IADrC,kBAAa,GAAG,EAAE;EACyC;EAE3DC,QAAQ,IAAI;EAEZC,WAAW,CAACC,KAAU;IACpB,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC;IAClC,MAAMI,YAAY,GAAG,EAAE;IACvBH,QAAQ,CAACI,OAAO,CAAEC,IAAS,IAAI;MAC7B,MAAMC,IAAI,GAAWD,IAAI,CAAC,oBAAoB,CAAC;MAC/C,MAAME,UAAU,GAAQD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;MACvCD,UAAU,CAACE,GAAG,EAAE;MAChBC,OAAO,CAACC,GAAG,CAACL,IAAI,EAAEC,UAAU,CAACK,IAAI,CAAC,GAAG,CAAC,CAAC;MACvC,IAAI,CAACT,YAAY,CAACI,UAAU,CAACK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QACvC;QACA,IAAI,CAAChB,iBAAiB,CACnBiB,YAAY,CAACN,UAAU,CAACK,IAAI,CAAC,GAAG,CAAC,CAAC,CAClCE,SAAS,CACPC,QAAQ,IAAMZ,YAAY,CAACI,UAAU,CAACK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGG,QAAS,CAC9D;;IAEP,CAAC,CAAC;IAEF;IACAC,UAAU,CAAC,MAAK;MACdN,OAAO,CAACC,GAAG,CAACR,YAAY,CAAC;IAC3B,CAAC,EAAE,GAAG,CAAC;IAEPO,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;EACvB;;AA9BWN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDR1B5B,mCAOE;MAHAA;QAAAA;QAAA;QAAA,OAAUA,yCAA4B;MAAA,EAAC;MAJzCA,iBAOE;MAEFA,8BAA0C;MACxCA,yDAEc;MACdA,+GAA8C;MAChDA,iBAAM;;;;MAJUA,eAA6B;MAA7BA,kFAA6B","names":["i0","HomeComponent","constructor","uploadFileService","ngOnInit","uploadFiles","files","arrFiles","Array","from","folderHolder","forEach","file","path","pathPieces","split","pop","console","log","join","createFolder","subscribe","folderId","setTimeout","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/home/home.component.html","/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/home/home.component.ts"],"sourcesContent":["<input\n  id=\"1-basic\"\n  type=\"file\"\n  #fileInput\n  (change)=\"uploadFiles(fileInput.files)\"\n  webkitdirectory\n  multiple\n/>\n\n<div style=\"width: 80%; margin-top: 30px\">\n  <ng-template *ngIf=\"uploadedFiles?.length; else noFiles\">\n    <div>uploadFiles.folder;</div>\n  </ng-template>\n  <ng-template #noFiles> No files </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UploadFileService } from '../services/upload-file.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  uploadedFiles = [];\n  constructor(private uploadFileService: UploadFileService) {}\n\n  ngOnInit() {}\n\n  uploadFiles(files: any) {\n    const arrFiles = Array.from(files);\n    const folderHolder = {};\n    arrFiles.forEach((file: any) => {\n      const path: string = file['webkitRelativePath'];\n      const pathPieces: any = path.split('/');\n      pathPieces.pop();\n      console.log(path, pathPieces.join('/'));\n      if (!folderHolder[pathPieces.join('/')]) {\n        // create folder and add to folderHolder\n        this.uploadFileService\n          .createFolder(pathPieces.join('/'))\n          .subscribe(\n            (folderId) => (folderHolder[pathPieces.join('/')] = folderId)\n          );\n      }\n    });\n\n    //\n    setTimeout(() => {\n      console.log(folderHolder);\n    }, 100);\n\n    console.log(arrFiles);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}