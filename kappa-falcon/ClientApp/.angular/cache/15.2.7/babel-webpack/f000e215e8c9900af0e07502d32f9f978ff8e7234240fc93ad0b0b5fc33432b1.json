{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UploadFileService {\n  constructor(http) {\n    this.http = http;\n  }\n  uploadFile(src, file) {\n    // console.log('src ', src, file['webkitRelativePath']);\n    return of('ok');\n  }\n  createFolder(folderName) {\n    const rnd = Math.round(Math.random() * 100000); // false random\n    // console.log('FolderId Created for - ', folderName, '--', rnd);\n    return of(rnd);\n  }\n}\nUploadFileService.ɵfac = function UploadFileService_Factory(t) {\n  return new (t || UploadFileService)(i0.ɵɵinject(i1.HttpClientModule));\n};\nUploadFileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UploadFileService,\n  factory: UploadFileService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;;;AAGrC,OAAM,MAAOC,iBAAiB;EAC5BC,YAAoBC,IAAsB;IAAtB,SAAI,GAAJA,IAAI;EAAqB;EAEtCC,UAAU,CAACC,GAAQ,EAAEC,IAAS;IACnC;IACA,OAAON,EAAE,CAAC,IAAI,CAAC;EACjB;EAEOO,YAAY,CAACC,UAAe;IACjC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;IAChD;IACA,OAAOZ,EAAE,CAACS,GAAG,CAAC;EAChB;;AAZWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAY,SAAjBZ,iBAAiB;AAAA","names":["of","UploadFileService","constructor","http","uploadFile","src","file","createFolder","folderName","rnd","Math","round","random","factory"],"sourceRoot":"","sources":["/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/services/upload-file.service.ts"],"sourcesContent":["import { HttpClientModule } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class UploadFileService {\n  constructor(private http: HttpClientModule) {}\n\n  public uploadFile(src: any, file: any): Observable<any> {\n    // console.log('src ', src, file['webkitRelativePath']);\n    return of('ok');\n  }\n\n  public createFolder(folderName: any): Observable<any> {\n    const rnd = Math.round(Math.random() * 100000); // false random\n    // console.log('FolderId Created for - ', folderName, '--', rnd);\n    return of(rnd);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}