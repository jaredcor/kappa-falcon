{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HomeComponent {\n  ngOnInit() {}\n  UploadFiles() {\n    const files = document.getElementById(\"files\").files;\n    for (let file = 0; file < files.length; file++) {\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        const object = new Object();\n        object.content = e.target?.result;\n        const json_upload = \"jsonObject=\" + JSON.stringify(object);\n        const xmlhttp = new XMLHttpRequest();\n        xmlhttp.open(\"POST\", \"http://localhost:8080/readFileServlet\");\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        xmlhttp.send(json_upload);\n      };\n      reader.readAsBinaryString(files[file]);\n    }\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)();\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 2,\n  vars: 0,\n  consts: [[\"type\", \"file\", \"id\", \"files\", \"name\", \"files\", \"webkitdirectory\", \"\", \"multiple\", \"\"], [\"id\", \"listing\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0)(1, \"ul\", 1);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAQA,OAAM,MAAOA,aAAa;EACxBC,QAAQ,IAAI;EAEZC,WAAW;IACT,MAAMC,KAAK,GAAoBC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACF,KAAK;IACrE,KAAK,IAAIG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,KAAK,CAACI,MAAM,EAAED,IAAI,EAAE,EAAE;MAC5C,MAAME,MAAM,GAAe,IAAIC,UAAU,EAAE;MAC3CD,MAAM,CAACE,MAAM,GAAG,UAASC,CAA4B;QACjD,MAAMC,MAAM,GAAwB,IAAIC,MAAM,EAAE;QAChDD,MAAM,CAACE,OAAO,GAAGH,CAAC,CAACI,MAAM,EAAEC,MAAgB;QAC3C,MAAMC,WAAW,GAAW,aAAa,GAAGC,IAAI,CAACC,SAAS,CAACP,MAAM,CAAC;QAClE,MAAMQ,OAAO,GAAmB,IAAIC,cAAc,EAAE;QACpDD,OAAO,CAACE,IAAI,CAAC,MAAM,EAAE,uCAAuC,CAAC;QAC7DF,OAAO,CAACG,gBAAgB,CAAC,cAAc,EAAE,mCAAmC,CAAC;QAC7EH,OAAO,CAACI,IAAI,CAACP,WAAW,CAAC;MAC7B,CAAC;MACDT,MAAM,CAACiB,kBAAkB,CAACtB,KAAK,CAACG,IAAI,CAAC,CAAC;;EAE9C;;AAlBaN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR1BC,2BAAsE","names":["HomeComponent","ngOnInit","UploadFiles","files","document","getElementById","file","length","reader","FileReader","onload","e","object","Object","content","target","result","json_upload","JSON","stringify","xmlhttp","XMLHttpRequest","open","setRequestHeader","send","readAsBinaryString","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/home/home.component.ts","/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UploadFileService } from '../services/upload-file.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  ngOnInit() {}\n\n  UploadFiles(): void {\n    const files: FileList | null = document.getElementById(\"files\").files;\n    for (let file = 0; file < files.length; file++) {\n        const reader: FileReader = new FileReader();\n        reader.onload = function(e: ProgressEvent<FileReader>): void {\n            const object: { content: string } = new Object();\n            object.content = e.target?.result as string;\n            const json_upload: string = \"jsonObject=\" + JSON.stringify(object);\n            const xmlhttp: XMLHttpRequest = new XMLHttpRequest();\n            xmlhttp.open(\"POST\", \"http://localhost:8080/readFileServlet\");\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            xmlhttp.send(json_upload);\n        }\n        reader.readAsBinaryString(files[file]);\n    }\n}\n}\n","<input type=\"file\" id=\"files\" name=\"files\" webkitdirectory multiple />\n<ul id=\"listing\"></ul>\n\n<script>\n  document.getElementById(\"filepicker\").addEventListener(\n    \"change\",\n    function (event) {\n      let output = document.getElementById(\"listing\");\n      let files = event.target.files;\n\n      for (let i = 0; i < files.length; i++) {\n        let item = document.createElement(\"li\");\n        item.innerHTML = files[i].webkitRelativePath;\n        output.appendChild(item);\n      }\n    },\n    false\n  );\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}