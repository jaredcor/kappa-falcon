{"ast":null,"code":"var Buffer = require(\"buffer\").Buffer;\nvar events = require(\"events\");\nvar util = require(\"util\");\nvar Stream = require(\"stream\");\nvar ENETModule = require(\"../build/enet.js\");\nvar enet = require(\"../index.js\");\nvar jsapi_ = ENETModule.jsapi;\nvar enet_ = ENETModule.libenet;\nutil.inherits(Peer, events.EventEmitter);\nmodule.exports.Peer = Peer;\nfunction Peer(pointer) {\n  var peer = this;\n  if (!pointer || !(typeof pointer === 'number') || pointer === 0) throw \"Peer null pointer\";\n  peer._pointer = pointer;\n  events.EventEmitter.call(peer);\n  peer.setMaxListeners(0);\n}\nPeer.prototype.state = function () {\n  if (this._pointer) {\n    return jsapi_.peer_get_state(this._pointer);\n  }\n  return enet.PEER_STATE.DISCONNECTED;\n};\nPeer.prototype.incomingDataTotal = function () {\n  if (this._pointer) {\n    return jsapi_.peer_get_incomingDataTotal(this._pointer);\n  }\n  return 0;\n};\nPeer.prototype.outgoingDataTotal = function () {\n  if (this._pointer) {\n    return jsapi_.peer_get_outgoingDataTotal(this._pointer);\n  }\n  return 0;\n};\nPeer.prototype.reliableDataInTransit = function () {\n  if (!this._pointer) return 0;\n  return jsapi._peer_get_reliableDataInTransit(this._pointer);\n};\nPeer.prototype.send = function (channel, packet, callback) {\n  var peer = this;\n  if (peer._host.isOffline()) {\n    if (typeof callback === 'function') callback(new Error(\"host-destroyed\"));\n    return true;\n  }\n  if (!peer._pointer) {\n    if (typeof callback === 'function') callback(new Error(\"Peer is disconnected\"));\n    return true;\n  }\n  if (!(packet instanceof enet.Packet)) packet = new enet.Packet(packet, enet.PACKET_FLAG.RELIABLE);\n  if (!packet._pointer || packet._pointer == 0) {\n    if (typeof callback === 'function') callback(new Error(\"null packet\"));\n    return true;\n  }\n  if (typeof callback === 'function') {\n    peer._host._addPacketCallback(packet, callback);\n  }\n  if (enet_.peer_send(peer._pointer, channel, packet._pointer) !== 0) {\n    if (typeof callback === 'function') callback(new Error('Packet not queued'));\n    return true; //packet not queued - error\n  }\n\n  return false; //packed queued - no error\n};\n\nPeer.prototype._delete = function (emitDisconnect, disconnectData) {\n  var peer = this;\n  if (!peer._pointer) return;\n  if (peer._host) delete peer._host.connectedPeers[peer._pointer];\n  peer._pointer = 0;\n  if (emitDisconnect) peer.emit(\"disconnect\", disconnectData);\n};\nPeer.prototype.reset = function () {\n  var peer = this;\n  if (peer._pointer) {\n    enet_.peer_reset(this._pointer);\n    peer._delete(false);\n  }\n  return peer;\n};\nPeer.prototype.ping = function () {\n  var peer = this;\n  if (peer._pointer) enet_.peer_ping(peer._pointer);\n  return peer;\n};\nPeer.prototype.disconnect = function (data) {\n  var peer = this;\n  if (peer._pointer) {\n    enet_.peer_disconnect(peer._pointer, data || 0);\n  }\n  return peer;\n};\nPeer.prototype.disconnectNow = function (data) {\n  var peer = this;\n  if (peer._pointer) {\n    enet_.peer_disconnect_now(peer._pointer, data || 0);\n    peer._delete(true);\n  }\n  return peer;\n};\nPeer.prototype.disconnectLater = function (data) {\n  var peer = this;\n  if (peer._pointer) {\n    enet_.peer_disconnect_later(peer._pointer, data || 0);\n  }\n  return peer;\n};\nPeer.prototype.address = function () {\n  var peer = this;\n  if (!peer._pointer) {\n    if (peer._address) return peer._address;\n    return;\n  }\n  var ptr = jsapi_.peer_get_address(peer._pointer);\n  var addr = new enet.Address(ptr);\n  //save the address so we can check it after disconnect\n  peer._address = {\n    address: addr.address(),\n    port: addr.port()\n  };\n  return peer._address;\n};\n\n//turn a channel with peer into a node writeable Stream\n//ref: https://github.com/substack/stream-handbook\n\n//todo - for stream, some additional error checking - make sure channel is a number\n//and not larger than the number of channels supported by peer. Dont allow creating\n//allow more than one write/readable stream for same channel?\n\nPeer.prototype.createWriteStream = function (channel) {\n  var peer = this;\n  if (!peer._pointer) return;\n  var connected = peer.state() === enet.PEER_STATE.CONNECTED;\n  var error = false;\n  var s = new Stream.Writable();\n  peer.on(\"connect\", function () {\n    connected = true;\n  });\n  peer.on(\"disconnect\", function (data) {\n    connected = false;\n  });\n  s._write = function (buf, enc, next) {\n    if (!connected) {\n      next(\"peer-not-connected\");\n      return;\n    }\n    if (error) {\n      next(\"packet-queuing-error\");\n      return;\n    }\n    var packet = new enet.Packet(buf, enet.PACKET_FLAG.RELIABLE);\n    error = peer.send(channel, packet);\n    if (error) {\n      next(\"packet-queuing-error\");\n      return;\n    }\n    next();\n  };\n  return s;\n};\nPeer.prototype.createReadStream = function (channel) {\n  var peer = this;\n  if (!peer._pointer) return;\n  var s = new Stream.Readable();\n  var connected = peer.state() === enet.PEER_STATE.CONNECTED;\n  peer.on(\"connect\", function () {\n    connected = true;\n  });\n  peer.on(\"disconnect\", function (data) {\n    connected = false;\n    s.push(null); //signals end of data\n  });\n\n  peer.on(\"message\", function (_packet, _channel) {\n    if (channel === _channel) {\n      s.push(_packet.data());\n    }\n  });\n  s._read = function (size) {\n    if (!connected) s.push(null);\n  };\n  return s;\n};\nPeer.prototype.createDuplexStream = function (channel) {\n  var peer = this;\n  if (!peer._pointer) return;\n  var s = new Stream.Duplex();\n  var error = false;\n  var connected = peer.state() === enet.PEER_STATE.CONNECTED;\n  peer.on(\"connect\", function () {\n    connected = true;\n  });\n  peer.on(\"disconnect\", function (data) {\n    connected = false;\n    s.push(null); //signals end of data\n  });\n\n  s._write = function (buf, enc, next) {\n    if (!connected) {\n      next(\"peer-not-connected\");\n      return;\n    }\n    if (error) {\n      next(\"packet-queuing-error\");\n      return;\n    }\n    var packet = new enet.Packet(buf, enet.PACKET_FLAG.RELIABLE);\n    error = peer.send(channel, packet);\n    if (error) {\n      next(\"packet-queuing-error\");\n      return;\n    }\n    next();\n  };\n  peer.on(\"message\", function (_packet, _channel) {\n    if (channel === _channel) {\n      s.push(_packet.data());\n    }\n  });\n  s._read = function (size) {\n    if (!connected) s.push(null);\n  };\n  return s;\n};","map":{"version":3,"names":["Buffer","require","events","util","Stream","ENETModule","enet","jsapi_","jsapi","enet_","libenet","inherits","Peer","EventEmitter","module","exports","pointer","peer","_pointer","call","setMaxListeners","prototype","state","peer_get_state","PEER_STATE","DISCONNECTED","incomingDataTotal","peer_get_incomingDataTotal","outgoingDataTotal","peer_get_outgoingDataTotal","reliableDataInTransit","_peer_get_reliableDataInTransit","send","channel","packet","callback","_host","isOffline","Error","Packet","PACKET_FLAG","RELIABLE","_addPacketCallback","peer_send","_delete","emitDisconnect","disconnectData","connectedPeers","emit","reset","peer_reset","ping","peer_ping","disconnect","data","peer_disconnect","disconnectNow","peer_disconnect_now","disconnectLater","peer_disconnect_later","address","_address","ptr","peer_get_address","addr","Address","port","createWriteStream","connected","CONNECTED","error","s","Writable","on","_write","buf","enc","next","createReadStream","Readable","push","_packet","_channel","_read","size","createDuplexStream","Duplex"],"sources":["/Users/jaredcortez/node_modules/enet/lib/Peer.js"],"sourcesContent":["var Buffer = require(\"buffer\").Buffer;\nvar events = require(\"events\");\nvar util = require(\"util\");\nvar Stream = require(\"stream\");\nvar ENETModule = require(\"../build/enet.js\");\nvar enet = require(\"../index.js\");\n\nvar jsapi_ = ENETModule.jsapi;\nvar enet_ = ENETModule.libenet;\n\nutil.inherits(Peer, events.EventEmitter);\n\nmodule.exports.Peer = Peer;\n\nfunction Peer(pointer) {\n\tvar peer = this;\n\tif (!pointer || !(typeof pointer === 'number') || pointer === 0) throw (\"Peer null pointer\");\n\tpeer._pointer = pointer;\n\tevents.EventEmitter.call(peer);\n\tpeer.setMaxListeners(0);\n}\n\nPeer.prototype.state = function () {\n\tif (this._pointer) {\n\t\treturn jsapi_.peer_get_state(this._pointer);\n\t}\n\treturn enet.PEER_STATE.DISCONNECTED;\n};\n\nPeer.prototype.incomingDataTotal = function () {\n\tif (this._pointer) {\n\t\treturn jsapi_.peer_get_incomingDataTotal(this._pointer);\n\t}\n\treturn 0;\n};\n\nPeer.prototype.outgoingDataTotal = function () {\n\tif (this._pointer) {\n\t\treturn jsapi_.peer_get_outgoingDataTotal(this._pointer);\n\t}\n\treturn 0;\n};\n\nPeer.prototype.reliableDataInTransit = function () {\n\tif (!this._pointer) return 0;\n\treturn jsapi._peer_get_reliableDataInTransit(this._pointer);\n};\n\nPeer.prototype.send = function (channel, packet, callback) {\n\tvar peer = this;\n\tif (peer._host.isOffline()) {\n\t\tif (typeof callback === 'function') callback(new Error(\"host-destroyed\"));\n\t\treturn true;\n\t}\n\n\tif (!peer._pointer) {\n\t\tif (typeof callback === 'function') callback(new Error(\"Peer is disconnected\"));\n\t\treturn true;\n\t}\n\n\tif (!(packet instanceof enet.Packet)) packet = new enet.Packet(packet, enet.PACKET_FLAG.RELIABLE);\n\n\tif (!packet._pointer || packet._pointer == 0) {\n\t\tif (typeof callback === 'function') callback(new Error(\"null packet\"));\n\t\treturn true;\n\t}\n\n\tif (typeof callback === 'function') {\n\t\tpeer._host._addPacketCallback(packet, callback);\n\t}\n\n\tif (enet_.peer_send(peer._pointer, channel, packet._pointer) !== 0) {\n\t\tif (typeof callback === 'function') callback(new Error('Packet not queued'));\n\t\treturn true; //packet not queued - error\n\t}\n\n\treturn false; //packed queued - no error\n};\n\nPeer.prototype._delete = function (emitDisconnect, disconnectData) {\n\tvar peer = this;\n\tif (!peer._pointer) return;\n\tif (peer._host) delete peer._host.connectedPeers[peer._pointer];\n\tpeer._pointer = 0;\n\tif (emitDisconnect) peer.emit(\"disconnect\", disconnectData);\n};\n\nPeer.prototype.reset = function () {\n\tvar peer = this;\n\tif (peer._pointer) {\n\t\tenet_.peer_reset(this._pointer);\n\t\tpeer._delete(false);\n\t}\n\treturn peer;\n};\n\nPeer.prototype.ping = function () {\n\tvar peer = this;\n\tif (peer._pointer) enet_.peer_ping(peer._pointer);\n\treturn peer;\n};\n\nPeer.prototype.disconnect = function (data) {\n\tvar peer = this;\n\tif (peer._pointer) {\n\t\tenet_.peer_disconnect(peer._pointer, data || 0);\n\t}\n\treturn peer;\n};\n\nPeer.prototype.disconnectNow = function (data) {\n\tvar peer = this;\n\tif (peer._pointer) {\n\t\tenet_.peer_disconnect_now(peer._pointer, data || 0);\n\t\tpeer._delete(true);\n\t}\n\treturn peer;\n};\n\nPeer.prototype.disconnectLater = function (data) {\n\tvar peer = this;\n\tif (peer._pointer) {\n\t\tenet_.peer_disconnect_later(peer._pointer, data || 0);\n\t}\n\treturn peer;\n};\n\nPeer.prototype.address = function () {\n\tvar peer = this;\n\tif (!peer._pointer) {\n\t\tif (peer._address) return peer._address;\n\t\treturn;\n\t}\n\tvar ptr = jsapi_.peer_get_address(peer._pointer);\n\tvar addr = new enet.Address(ptr);\n\t//save the address so we can check it after disconnect\n\tpeer._address = {\n\t\taddress: addr.address(),\n\t\tport: addr.port()\n\t};\n\treturn peer._address;\n};\n\n//turn a channel with peer into a node writeable Stream\n//ref: https://github.com/substack/stream-handbook\n\n//todo - for stream, some additional error checking - make sure channel is a number\n//and not larger than the number of channels supported by peer. Dont allow creating\n//allow more than one write/readable stream for same channel?\n\nPeer.prototype.createWriteStream = function (channel) {\n\tvar peer = this;\n\tif (!peer._pointer) return;\n\n\tvar connected = (peer.state() === enet.PEER_STATE.CONNECTED);\n\tvar error = false;\n\n\tvar s = new Stream.Writable();\n\n\tpeer.on(\"connect\", function () {\n\t\tconnected = true;\n\t});\n\n\tpeer.on(\"disconnect\", function (data) {\n\t\tconnected = false;\n\t});\n\n\ts._write = function (buf, enc, next) {\n\t\tif (!connected) {\n\t\t\tnext(\"peer-not-connected\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (error) {\n\t\t\tnext(\"packet-queuing-error\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar packet = new enet.Packet(buf, enet.PACKET_FLAG.RELIABLE);\n\n\t\terror = peer.send(channel, packet);\n\n\t\tif (error) {\n\t\t\tnext(\"packet-queuing-error\");\n\t\t\treturn;\n\t\t}\n\n\t\tnext();\n\t};\n\n\treturn s;\n};\n\nPeer.prototype.createReadStream = function (channel) {\n\tvar peer = this;\n\tif (!peer._pointer) return;\n\n\tvar s = new Stream.Readable();\n\n\tvar connected = (peer.state() === enet.PEER_STATE.CONNECTED);\n\n\tpeer.on(\"connect\", function () {\n\t\tconnected = true;\n\t});\n\n\tpeer.on(\"disconnect\", function (data) {\n\t\tconnected = false;\n\t\ts.push(null); //signals end of data\n\t});\n\n\tpeer.on(\"message\", function (_packet, _channel) {\n\t\tif (channel === _channel) {\n\t\t\ts.push(_packet.data());\n\t\t}\n\t});\n\n\ts._read = function (size) {\n\t\tif (!connected) s.push(null);\n\t};\n\n\treturn s;\n\n};\n\nPeer.prototype.createDuplexStream = function (channel) {\n\tvar peer = this;\n\tif (!peer._pointer) return;\n\n\tvar s = new Stream.Duplex();\n\tvar error = false;\n\n\tvar connected = (peer.state() === enet.PEER_STATE.CONNECTED);\n\n\tpeer.on(\"connect\", function () {\n\t\tconnected = true;\n\t});\n\n\tpeer.on(\"disconnect\", function (data) {\n\t\tconnected = false;\n\t\ts.push(null); //signals end of data\n\t});\n\n\ts._write = function (buf, enc, next) {\n\t\tif (!connected) {\n\t\t\tnext(\"peer-not-connected\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (error) {\n\t\t\tnext(\"packet-queuing-error\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar packet = new enet.Packet(buf, enet.PACKET_FLAG.RELIABLE);\n\n\t\terror = peer.send(channel, packet);\n\n\t\tif (error) {\n\t\t\tnext(\"packet-queuing-error\");\n\t\t\treturn;\n\t\t}\n\n\t\tnext();\n\t};\n\n\tpeer.on(\"message\", function (_packet, _channel) {\n\t\tif (channel === _channel) {\n\t\t\ts.push(_packet.data());\n\t\t}\n\t});\n\n\ts._read = function (size) {\n\t\tif (!connected) s.push(null);\n\t};\n\n\treturn s;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}