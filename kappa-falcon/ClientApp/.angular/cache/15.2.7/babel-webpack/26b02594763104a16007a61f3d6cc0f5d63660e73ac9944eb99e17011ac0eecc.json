{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/upload-file.service\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_table_3_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 7)(1, \"th\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r5 == null ? null : file_r5.fileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r5 == null ? null : file_r5.folder);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r5 == null ? null : file_r5.folderId);\n  }\n}\nfunction HomeComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 5)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"File name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Folder\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Id Folder\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, HomeComponent_table_3_tr_10_Template, 7, 3, \"tr\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.uploadedFiles);\n  }\n}\nfunction HomeComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" No files \");\n  }\n}\nexport class HomeComponent {\n  constructor(uploadFileService) {\n    this.uploadFileService = uploadFileService;\n    this.acceptedFormat = '.pdf';\n    this.maxSize = 102400;\n    this.onSendFilesList = new EventEmitter();\n    this.wrongFilesList = [];\n    this.filesList = [];\n    this.uploadedFiles = [];\n  }\n  ngOnInit() {}\n  uploadFiles(files) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.wrongFilesList = [];\n      let _tempWrongFilesList = [];\n      let _tempFilesList = [];\n      const folderHolder = {};\n      _this.uploadedFiles = [];\n      let file;\n      for (file of Array.from(files)) {\n        // console.log(file['webkitRelativePath'], file['size'], file['type']);\n        const path = file['webkitRelativePath'];\n        const pathPieces = path.split('/');\n        if (!pathPieces.reverse()[0].startsWith('.')) {\n          const currentFolder = pathPieces[1];\n          // console.log('Checking for folder ', currentFolder, 'in', folderHolder);\n          if (folderHolder[currentFolder]) {\n            const b = yield lastValueFrom(_this.uploadFileService.uploadFile(folderHolder[currentFolder], file));\n            _this.uploadedFiles.push({\n              fileName: pathPieces[0],\n              folder: currentFolder,\n              folderId: folderHolder[currentFolder]\n            });\n          } else {\n            const folderId = yield lastValueFrom(_this.uploadFileService.createFolder(currentFolder));\n            folderHolder[currentFolder] = folderId;\n            const p = yield lastValueFrom(_this.uploadFileService.uploadFile(folderHolder[currentFolder], file));\n            _this.uploadedFiles.push({\n              fileName: pathPieces[0],\n              folder: currentFolder,\n              folderId: folderHolder[currentFolder]\n            });\n          }\n        }\n      }\n      // console.log(this.uploadedFiles);\n      _tempFilesList = Array.from(event.target.files);\n      if (_tempFilesList.length > 0) _tempFilesList.forEach(file => {\n        if (_this.checkFileSizeMatches(file.size)) file.wrongSize = true;\n        if (_this.checkFileTypesMatches(file.type)) file.wrongFormat = true;\n        if (file.wrongSize || file.wrongFormat) _tempWrongFilesList.push(file);\n      });\n      _tempFilesList = _tempFilesList.filter(elem => elem.wrongFormat !== true && elem.wrongSize !== true);\n      _tempFilesList.forEach(elem => _this.filesList.push(elem));\n      _this.wrongFilesList = [..._tempWrongFilesList];\n      console.log('this.filesList', JSON.stringify(_this.filesList), 'this.wrongFilesList ', _this.wrongFilesList);\n      if (_this.filesList.length > 0) return _this.emitFilesList(_this.filesList);else return;\n    })();\n  }\n  emitFilesList(files) {\n    console.log(files);\n    this.onSendFilesList.emit(files);\n  }\n  checkFileSizeMatches(fileSize) {\n    return parseInt((fileSize / 1024).toFixed(4)) > this.maxSize || false;\n  }\n  checkFileTypesMatches(fileType) {\n    console.log(fileType, this.acceptedFormat);\n    if (!this.acceptedFormat.includes(fileType)) return false;else return fileType.match(this.acceptedFormat) === null;\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.UploadFileService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  inputs: {\n    acceptedFormat: \"acceptedFormat\",\n    maxSize: \"maxSize\"\n  },\n  outputs: {\n    onSendFilesList: \"onSendFilesList\"\n  },\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"1-basic\", \"type\", \"file\", \"webkitdirectory\", \"\", \"multiple\", \"\", 3, \"change\"], [\"fileInput\", \"\"], [2, \"width\", \"80%\", \"margin-top\", \"30px\"], [\"style\", \"width: 100%\", 4, \"ngIf\", \"ngIfElse\"], [\"noFiles\", \"\"], [2, \"width\", \"100%\"], [\"style\", \"text-align: center\", 4, \"ngFor\", \"ngForOf\"], [2, \"text-align\", \"center\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"input\", 0, 1);\n      i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_0_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.uploadFiles(_r0.files));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, HomeComponent_table_3_Template, 11, 1, \"table\", 3);\n      i0.ɵɵtemplate(4, HomeComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.uploadedFiles == null ? null : ctx.uploadedFiles.length)(\"ngIfElse\", _r2);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport class FileItem {\n  constructor() {\n    this.name = \"\";\n    this.size = 0;\n    this.type = \"\";\n    this.wrongSize = false;\n    this.wrongFormat = false;\n  }\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","lastValueFrom","i0","HomeComponent","constructor","uploadFileService","ngOnInit","uploadFiles","files","wrongFilesList","_tempWrongFilesList","_tempFilesList","folderHolder","uploadedFiles","file","Array","from","path","pathPieces","split","reverse","startsWith","currentFolder","b","uploadFile","push","fileName","folder","folderId","createFolder","p","event","target","length","forEach","checkFileSizeMatches","size","wrongSize","checkFileTypesMatches","type","wrongFormat","filter","elem","filesList","console","log","JSON","stringify","emitFilesList","onSendFilesList","emit","fileSize","parseInt","toFixed","maxSize","fileType","acceptedFormat","includes","match","selectors","inputs","outputs","decls","vars","consts","template","FileItem"],"sourceRoot":"","sources":["/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/home/home.component.ts","/Users/jaredcortez/kappa-falcon/kappa-falcon/ClientApp/src/app/home/home.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { lastValueFrom } from 'rxjs';\nimport { UploadFileService } from '../services/upload-file.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  @Input() acceptedFormat: string = '.pdf';\n  @Input() maxSize: number = 102400;\n  @Output() onSendFilesList: EventEmitter<FileItem[]> = new EventEmitter<\n    FileItem[]\n  >();\n  wrongFilesList = [];\n  filesList = [];\n  uploadedFiles: any = [];\n  constructor(private uploadFileService: UploadFileService) {}\n  ngOnInit() {}\n\n  async uploadFiles(files: any) {\n    this.wrongFilesList = [];\n    let _tempWrongFilesList: any = [];\n    let _tempFilesList: any = [];\n    const folderHolder: any = {};\n    this.uploadedFiles = [];\n    let file: any;\n    for (file of Array.from(files)) {\n      // console.log(file['webkitRelativePath'], file['size'], file['type']);\n      const path: string = file['webkitRelativePath'];\n      const pathPieces: any = path.split('/');\n\n      if (!pathPieces.reverse()[0].startsWith('.')) {\n        const currentFolder: any = pathPieces[1];\n        // console.log('Checking for folder ', currentFolder, 'in', folderHolder);\n        if (folderHolder[currentFolder]) {\n          const b = await lastValueFrom(\n            this.uploadFileService.uploadFile(folderHolder[currentFolder], file)\n          );\n          this.uploadedFiles.push({\n            fileName: pathPieces[0],\n            folder: currentFolder,\n            folderId: folderHolder[currentFolder],\n          });\n        } else {\n          const folderId = await lastValueFrom(\n            this.uploadFileService.createFolder(currentFolder)\n          );\n          folderHolder[currentFolder] = folderId;\n\n          const p = await lastValueFrom(\n            this.uploadFileService.uploadFile(folderHolder[currentFolder], file)\n          );\n          this.uploadedFiles.push({\n            fileName: pathPieces[0],\n            folder: currentFolder,\n            folderId: folderHolder[currentFolder],\n          });\n        }\n      }\n    }\n    // console.log(this.uploadedFiles);\n    _tempFilesList = Array.from(event.target.files);\n    if (_tempFilesList.length > 0)\n      _tempFilesList.forEach((file: { size: number; wrongSize: boolean; type: string; wrongFormat: boolean; }) => {\n        if (this.checkFileSizeMatches(file.size)) file.wrongSize = true;\n        if (this.checkFileTypesMatches(file.type)) file.wrongFormat = true;\n        if (file.wrongSize || file.wrongFormat) _tempWrongFilesList.push(file);\n      });\n\n    _tempFilesList = _tempFilesList.filter(\n      (elem: { wrongFormat: boolean; wrongSize: boolean; }) => elem.wrongFormat !== true && elem.wrongSize !== true\n    );\n    _tempFilesList.forEach((elem: any) => this.filesList.push(elem));\n\n    this.wrongFilesList = [..._tempWrongFilesList];\n    console.log(\n      'this.filesList',\n      JSON.stringify(this.filesList),\n      'this.wrongFilesList ',\n      this.wrongFilesList\n    );\n    if (this.filesList.length > 0) return this.emitFilesList(this.filesList);\n    else return;\n  }\n\n  emitFilesList(files: FileItem[]) {\n    console.log(files);\n    this.onSendFilesList.emit(files);\n  }\n\n  checkFileSizeMatches(fileSize: number): boolean {\n    return parseInt((fileSize / 1024).toFixed(4)) > this.maxSize || false;\n  }\n  checkFileTypesMatches(fileType: string): boolean {\n    console.log(fileType, this.acceptedFormat);\n    if (!this.acceptedFormat.includes(fileType)) return false;\n    else return fileType.match(this.acceptedFormat) === null;\n  }\n}\n\nexport class FileItem {\n  name: string = \"\";\n  size: number = 0;\n  type: string = \"\";\n  wrongSize = false;\n  wrongFormat = false;\n}\n","<input\n  id=\"1-basic\"\n  type=\"file\"\n  #fileInput\n  (change)=\"uploadFiles(fileInput.files)\"\n  webkitdirectory\n  multiple\n/>\n\n<div style=\"width: 80%; margin-top: 30px\">\n  <table style=\"width: 100%\" *ngIf=\"uploadedFiles?.length; else noFiles\">\n    <thead>\n      <tr>\n        <th>File name</th>\n        <th>Folder</th>\n        <th>Id Folder</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr style=\"text-align: center\" *ngFor=\"let file of uploadedFiles\">\n        <th>{{ file?.fileName }}</th>\n        <td>{{ file?.folder }}</td>\n        <td>{{ file?.folderId }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <ng-template #noFiles> No files </ng-template>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}